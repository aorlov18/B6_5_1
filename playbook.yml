---
- hosts: all
  become: true
  tasks:
  - name: Create group
    group:
      name: admin
    register: out
  - debug:
      msg: "GID = {{ out.gid }}"
  - name: Create user
    ansible.builtin.user:
      name: user1
      comment: ansible create
      uid: "{{ out.gid }}"
      group: admin
      create_home: true
  - name: Create .ssh folder
    file:
      path: ~user1/.ssh
      state: directory
      owner: user1
      group: admin
      mode: 0777
  - name: Create a 2048-bit SSH key for user=user1 in ~user1/.ssh/id_rsa
    ansible.builtin.user:
      name: user1
      generate_ssh_key: yes
      ssh_key_bits: 2048
      ssh_key_file: .ssh/id_rsa
  - name: Add provision user1 to the sudoers
    copy:
      dest: "/etc/sudoers.d/user1"
      content: "user1  ALL=(ALL)  NOPASSWD: ALL"
  - name: Deploy SSH key
    authorized_key: user=user1
                     key="{{ lookup('file', '/home/user1/.ssh/id_rsa.pub') }}"
                     state=present
    become: yes
    become_user: user1
  #- name: Set authorized key taken from file
  #  ansible.posix.authorized_key:
  #    user: user1
  #    state: present
  #    key: "{{ lookup('file', '/home/user1/.ssh/id_rsa.pub') }}"
  #    path: /user1/.ssh/authorized_keys
  #    manage_dir: false
      









    #- name: Create new user
    #  user:
    #    name: user1
    #- name: Create .ssh folder
    #  file:
    #    path: ~user1/.ssh
    #    state: directory
    #    owner: user1
    #    group: admin
    #    mode: 0700
    #- name: Upload SSH key
    #  copy:
    #    src: ../keys/user1
    #    dest: ~user1/.ssh/id_rsa
    #    owner: user1
    #    group: admin
    #    mode: 0700
  
  
  
  
  
  #- name: Create an ssh key for users in the directory /.ssh/id_rsa
  #  user: user1 #name={{ item.username }}
  #  generate_ssh_key: yes
  #  ssh_key_bits: 2048
  #  ssh_key_file: ~/user1/.ssh/id_rsa #~/'{{ item.username }}'/.ssh/id_rsa
    #with_items: '{{users}}'
  
  #- name: Setup | authorized key upload
  #  authorized_key: user={{ item.username }}
  #    key="{{ lookup('file', 'files/{{ item.username }}.pub') }}"
  #  when: '{{ item.use_sudo }} == True'
  #  with_items: '{{users}}'
  
  #- name: Sudoers | update sudoers file and validate
  #  lineinfile: "dest=/etc/sudoers
  #    insertafter=EOF
  #    line='{{ item.username }} ALL=(ALL) NOPASSWD: ALL'
  #    regexp='^{{ item.username }} .*'
  #    state=present"
  #  when: '{{ item.use_sudo }} == True'
  #  with_items: '{{users}}'
  
  #- name: create users and group
  #  user: user1
  #  state: present
  #  group: admin
  #  state: present

  #- ansible.builtin.user:
  #  name: user1
  #  shell: /bin/bash
  #  groups: admin
  #  append: yes

  #- name: Create .ssh folder
  #  file:
  #    path: ~user1/.ssh
  #    state: directory
  #    owner: user1
  #    group: admin
  #    mode: 0700
    
  #- name: Create an ssh key for user1 in ~user1/.ssh/id_rsa
  #  user:
  #    name: user1
  #    generate_ssh_key: yes
  #    ssh_key_bits: 2048
  #    ssh_key_file: .ssh/id_rsa
    

  #- authorized_key:
  #  user: user1
  #  state: present
  #  key: "{{ lookup('file', './user_id_rsa.pub') }}"

  




    
    #- name: Create a 2048-bit SSH key for user jsmith in ~jsmith/.ssh/id_rsa
    #  ansible.builtin.user:
    #    name: user1
    #    generate_ssh_key: yes
    #    ssh_key_bits: 2048
    #    ssh_key_file: .ssh/id_rsa

    
    #- name: Add authorized key from id_rsa.pub file
    #  authorized_key:
    #    user: user1
    #    state: present
    #    key: "{{ lookup('file', lookup ('env', 'HOME') + '/home/user1/.ssh/id_rsa.pub') }}" 
     
     
  
  
